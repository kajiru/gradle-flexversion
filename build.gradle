apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "com.gradle.plugin-publish"

project.ext."gradle.publish.key" = System.env.GRADLE_PUBLISH_KEY
project.ext."gradle.publish.secret" = System.env.GRADLE_PUBLISH_SECRET

repositories {
  mavenCentral()
}

buildscript {
  repositories {
    maven {
        url "http://dl.bintray.com/palantir/releases"
    }
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
  }
  dependencies {
    classpath "com.palantir:gradle-flexversion:0.8.1"
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.3"
  }
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile 'org.eclipse.jgit:org.eclipse.jgit.java7:3.4.1.201406201815-r'
  testCompile 'junit:junit:4.11'
}

apply plugin: 'gradle-flexversion'

flexversion {
  useTags = true
}

group "com.palantir"
version flexVersion()

task sourceJar(type: Jar) {
      from sourceSets.main.allSource
      classifier "sources"
}

publishing {
  publications {
    ivy(MavenPublication) {
      from components.java

      artifact(sourceJar) {
        classifier "sources"
      }
    }
  }
  repositories {
    maven {
      url "$buildDir/localpublish/"
    }
  }
}

task zipPublish (type: Zip) {
  from ("${buildDir}/localpublish") {
    include '**/*'
    exclude '**/maven-metadata.xml*'
  }
  appendix = "release"
  destinationDir = file("${project.buildDir}/artifacts")
}

publish << {
  file("${project.buildDir}/artifacts").mkdirs()
  tasks.zipPublish.execute()
}


test {
  workingDir = file("${project.buildDir}/testing")
  environment "buildRef", "fancybranchname"
  environment "buildRef_CLEAN", "fancybranchname"
  environment "GIT_BRANCH_FOR_TESTING", "refs/heads/feature/checkbox"
  environment "GIT_BRANCH_FOR_TESTING_CLEAN", "feature/checkbox"
  environment "git.branch", "gerrit/release/1.5"
  environment "git.branch_CLEAN", "release/1.5"
}.doFirst {
  workingDir.deleteDir()
  workingDir.mkdirs()
}

pluginBundle {
  website = "https://github.com/palantir/gradle-flexversion"
  vcsUrl = "https://github.com/palantir/gradle-flexversion"
  description = "Gradle FlexVersion is a plugin to calculate the flex version of a repo."
  tags = ['git', 'version']

  plugins {
    flexVersionPlugin {
      id = 'com.palantir.flexversion'
      displayName = "Palantir Gradle Flex Version"
    }
  }
}

publishPlugins.onlyIf {
    System.getenv('TRAVIS_TAG') && project.version.toString() ==~ /\d+\.\d+\.\d+/
}
